[tool.poetry]
name = "fastapi-study"
version = "0.1.0"
description = ""
authors = ["sushi-chaaaan <sushi_code@outlook.jp>"]
readme = "README.md"
# packages = [{include = "fastapi_study"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.85.0"
uvicorn = "^0.18.3"
beautifulsoup4 = "^4.11.1"
aiohttp = "^3.8.3"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
mypy = "^0.982"
isort = "^5.10.1"
pyproject-flake8 = "^5.0.4.post1"
flake8-isort = "^5.0.0"
poethepoet = "^0.16.4"

[tool.black]
line-length = 120

[tool.flake8]
ignore="W503"
max-line-length = 120
extend-exclude = ".venv"

[tool.poe.tasks]
# lint
lint = { sequence = ["lint:flake8", "lint:isort", "lint:mypy"] }
"lint:flake8" = "poetry run pflake8 ."
"lint:isort" = "poetry run isort -c ."
"lint:mypy" = "poetry run mypy ."
"mypy_setup" = "mypy --install-types --non-interactive"

# format
format = { sequence = ["format:black", "format:isort"] }
"format:black" = "poetry run black ."
"format:isort" = "poetry run isort ."

load-venv = { shell = ". .venv/bin/activate" }
up-api-server = { script = "api.main:main" }
up-mysql-in-docker = { shell = "sudo docker compose up --build -d" }
up = { sequence = ["load-venv","up-mysql-in-docker", "up-api-server"] }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
